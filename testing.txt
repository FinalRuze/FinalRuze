$source = @"
using System;
using System.Runtime.InteropServices;
using System.Threading;

public static class Win32
{
    [DllImport("user32.dll")]
    static extern int GetSystemMetrics(int smIndex);

    [DllImport("user32.dll")]
    static extern IntPtr GetDC(IntPtr hWnd);

    [DllImport("gdi32.dll")]
    static extern bool StretchBlt(IntPtr hdcDest, int nXOriginDest, int nYOriginDest, int nWidthDest, int nHeightDest, IntPtr hdcSrc, int nXOriginSrc, int nYOriginSrc, int nWidthSrc, int nHeightSrc, int dwRop);

    [DllImport("user32.dll", SetLastError = true)]
    static extern bool SetProcessDPIAware();

    [DllImport("user32.dll")]
    static extern int ReleaseDC(IntPtr hWnd, IntPtr hdc);

    public static void DarkenScreen()
    {
        SetProcessDPIAware();
        int cx = GetSystemMetrics(0);
        int cy = GetSystemMetrics(1);

        IntPtr hdc = GetDC(IntPtr.Zero);
        Graphics g = Graphics.FromHdc(hdc);
        SolidBrush brush = new SolidBrush(Color.Black);

        for (int alpha = 0; alpha <= 255; alpha += 5)
        {
            brush.Color = Color.FromArgb(alpha, 0, 0, 0);
            g.FillRectangle(brush, 0, 0, cx, cy);
            Thread.Sleep(100);
        }

        g.Dispose();
        brush.Dispose();
        ReleaseDC(IntPtr.Zero, hdc);
    }
}
"@

Add-Type -TypeDefinition $source -Language CSharp
[Win32]::DarkenScreen()
