$source = @"
using System;
using System.Runtime.InteropServices;
using System.Threading;

public static class Win32
{
    [DllImport("user32.dll")]
    static extern int GetSystemMetrics(int smIndex);

    [DllImport("user32.dll")]
    static extern IntPtr GetDC(IntPtr hWnd);

    [DllImport("gdi32.dll")]
    static extern bool PatBlt(IntPtr hdc, int nXLeft, int nYLeft, int nWidth, int nHeight, uint dwRop);

    [DllImport("user32.dll", SetLastError = true)]
    static extern bool SetProcessDPIAware();

    public static void PIP()
    {
        SetProcessDPIAware();
        int cx = GetSystemMetrics(0);
        int cy = GetSystemMetrics(1);

        IntPtr hdc = GetDC(IntPtr.Zero);
        int delay = 20; // Time delay between each frame in milliseconds
        int steps = 50; // Number of steps to reach full black screen

        for (int i = 0; i <= steps; i++)
        {
            int currentAlpha = (255 / steps) * i;
            uint rop = (uint)((currentAlpha << 24) | 0x00000042); // PATCOPY ROP

            PatBlt(hdc, 0, 0, cx, cy, rop);
            Thread.Sleep(delay);
        }
    }
}
"@

Add-Type -TypeDefinition $source -Language CSharp
[Win32]::PIP()
