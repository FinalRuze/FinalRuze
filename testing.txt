$source= @"
using System;
using System.Runtime.InteropServices;
using System.Threading;

public static class Win32
{
    [DllImport("user32.dll")]
    static extern int GetSystemMetrics(int smIndex);

    [DllImport("user32.dll")]
    static extern IntPtr GetDC(IntPtr hWnd);

    [DllImport("gdi32.dll")]
    static extern bool StretchBlt(IntPtr hdcDest, int nXOriginDest, int nYOriginDest, int nWidthDest, int nHeightDest, IntPtr hdcSrc, int nXOriginSrc, int nYOriginSrc, int nWidthSrc, int nHeightSrc, int dwRop);

    [DllImport("user32.dll", SetLastError = true)]
    static extern bool SetProcessDPIAware();

    public static void PIP()
    {
        SetProcessDPIAware();
        int cx = GetSystemMetrics(0);
        int cy = GetSystemMetrics(1);
        int increment = 5;
        int delay = 100;

        while (cx < GetSystemMetrics(0) && cy < GetSystemMetrics(1))
        {
            Thread.Sleep(delay);
            IntPtr hdc = GetDC(IntPtr.Zero);

            int blackWidth = Math.Min(GetSystemMetrics(0), cx + increment);
            int blackHeight = Math.Min(GetSystemMetrics(1), cy + increment);
            int sourceX = (GetSystemMetrics(0) - blackWidth) / 2;
            int sourceY = (GetSystemMetrics(1) - blackHeight) / 2;

            StretchBlt(hdc, 0, 0, GetSystemMetrics(0), GetSystemMetrics(1), hdc, sourceX, sourceY, blackWidth, blackHeight, 0x00000042);
            cx += increment;
            cy += increment;
        }
    }
}
"@

Add-Type -TypeDefinition $source -Language CSharp
[Win32]::PIP()
