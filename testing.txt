$source = @"
using System;
using System.Runtime.InteropServices;
using System.Threading;

public static class Win32
{
    [DllImport("user32.dll")]
    static extern int GetSystemMetrics(int smIndex);

    [DllImport("user32.dll")]
    static extern IntPtr GetDC(IntPtr hWnd);

    [DllImport("gdi32.dll")]
    static extern bool StretchBlt(IntPtr hdcDest, int nXOriginDest, int nYOriginDest, int nWidthDest, int nHeightDest, IntPtr hdcSrc, int nXOriginSrc, int nYOriginSrc, int nWidthSrc, int nHeightSrc, int dwRop);

    [DllImport("user32.dll", SetLastError = true)]
    static extern bool SetProcessDPIAware();

    public static void ReversePIP()
    {
        SetProcessDPIAware();
        int cx = GetSystemMetrics(0);
        int cy = GetSystemMetrics(1);

        while (true)
        {
            Thread.Sleep(800);
            IntPtr hdc = GetDC(IntPtr.Zero);

            StretchBlt(hdc, 0, 0, cx, cy, hdc, 50, 50, cx - 100, cy - 100, 0x00CC0020);
        }
    }

    public static void MagnifyScreen()
    {
        SetProcessDPIAware();
        int cx = GetSystemMetrics(0);
        int cy = GetSystemMetrics(1);

        while (true)
        {
            Thread.Sleep(800);
            IntPtr hdc = GetDC(IntPtr.Zero);

            StretchBlt(hdc, 0, 0, cx, cy, hdc, 0, 0, cx, cy, 0x00CC0020);
        }
    }

    public static void InvertColors()
    {
        while (true)
        {
            Thread.Sleep(800);
            IntPtr hdc = GetDC(IntPtr.Zero);

            StretchBlt(hdc, 0, 0, GetSystemMetrics(0), GetSystemMetrics(1), hdc, 0, 0, 0, 0, 0x00220326);
        }
    }
}
"@

Add-Type -TypeDefinition $source -Language CSharp

# Start the different graphic effects on separate threads
$reversePIPTask = Start-Job -ScriptBlock { [Win32]::ReversePIP() }
$magnifyScreenTask = Start-Job -ScriptBlock { [Win32]::MagnifyScreen() }
$invertColorsTask = Start-Job -ScriptBlock { [Win32]::InvertColors() }

# Wait for user input to stop the effects
Write-Host "Graphic effects are running. Press any key to stop..."

$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")

# Stop the effects by terminating the threads
$reversePIPTask | Stop-Job
$magnifyScreenTask | Stop-Job
$invertColorsTask | Stop-Job
