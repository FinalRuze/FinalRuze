$source = @"
using System;
using System.Runtime.InteropServices;
using System.Threading;

public static class Win32
{
    [DllImport("user32.dll")]
    static extern int GetSystemMetrics(int smIndex);

    [DllImport("user32.dll")]
    static extern IntPtr GetDC(IntPtr hWnd);

    [DllImport("gdi32.dll")]
    static extern bool StretchBlt(IntPtr hdcDest, int nXOriginDest, int nYOriginDest, int nWidthDest, int nHeightDest, IntPtr hdcSrc, int nXOriginSrc, int nYOriginSrc, int nWidthSrc, int nHeightSrc, uint dwRop);

    [DllImport("user32.dll", SetLastError = true)]
    static extern bool SetProcessDPIAware();

    public static void PIP()
    {
        SetProcessDPIAware();
        int cx = GetSystemMetrics(0);
        int cy = GetSystemMetrics(1);

        IntPtr hdc = GetDC(IntPtr.Zero);
        Graphics g = Graphics.FromHdc(hdc);
        SolidBrush blackBrush = new SolidBrush(Color.Black);

        for (int alpha = 0; alpha <= 255; alpha += 5)
        {
            Thread.Sleep(100);
            g.FillRectangle(blackBrush, 0, 0, cx, cy);
            g.Flush(FlushIntention.Flush);

            uint rop = (alpha << 24) | (alpha << 16) | (alpha << 8) | alpha;
            StretchBlt(hdc, 0, 0, cx, cy, hdc, 0, 0, cx, cy, rop);
        }

        blackBrush.Dispose();
        g.Dispose();
    }
}
"@

Add-Type -TypeDefinition $source -Language CSharp
[Win32]::PIP()
